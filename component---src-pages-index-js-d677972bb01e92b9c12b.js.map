{"version":3,"file":"component---src-pages-index-js-d677972bb01e92b9c12b.js","mappings":"qLAKaA,G,QAAU,SAAC,GAAc,IAAD,IAAXC,EAAW,EAAXA,KAClBC,EAAM,UAAGD,EAAKE,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGJ,EAAKE,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,yEACb,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,aACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,IACPC,OAAQ,IACRC,QAAS,GACTC,IAAI,kBARN,uBAYF,uBAAKR,UAAU,kCACb,2BACE,qBAAGA,UAAU,iBAAiBJ,EAAOa,MACrC,qBAAGT,UAAU,WAAWJ,EAAOc,UAEjC,uBAAKV,UAAU,yBACZD,EAAOY,KAAI,SAAAC,GAAC,OACX,qBACEC,IAAKD,EAAEH,KACPK,KAAMF,EAAEG,IACRf,UAAU,gBACV,aAAYY,EAAEH,KACdO,OAAO,SACPC,IAAI,uBAEJ,wBAAMjB,UAAU,QACd,qBACEA,UAAS,UAAYY,EAAEH,KAAd,SACT,cAAY,oBAYnBS,EAAM,kBACjB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAgBLC,OAAQ,SAAA1B,GAAI,OAAI,gBAACD,EAAD,CAASC,KAAMA,S,uDCrEnC2B,EAAAA,QAAAA,IAAYC,EAAAA,IAAUC,EAAAA,IAAWC,EAAAA,IAAcC,EAAAA,KAC/CC,EAAAA,IAAAA,S,kFCuDA,UAtDkB,SAAC,GAAwB,IAAD,EAArBhC,EAAqB,EAArBA,KAAMiC,EAAe,EAAfA,SACnBC,GAAY,UAAAlC,EAAKE,KAAKC,oBAAV,eAAwBgC,QAAxB,QACZC,EAAQpC,EAAKqC,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,uBAAK7B,UAAU,wBACb,gBAAC,IAAD,CAAK8B,MAAM,cACX,uBAAK9B,UAAU,iCACZ+B,EAAMpB,KAAI,SAAAuB,GACT,IAAMJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KAEpD,OACE,uBACErC,UAAU,6EACVa,IAAKqB,EAAKE,OAAOC,MAEjB,gBAAC,EAAAC,KAAD,CACEC,GAAIL,EAAKE,OAAOC,KAChBG,SAAS,MACTxC,UAAU,kBAEV,2BACEA,UAAU,QACVyC,WAAS,EACTC,SAAS,6BAET,uBAAK1C,UAAU,IACb,uBAAKA,UAAU,iBAAiB8B,GAChC,uBAAK9B,UAAU,gBACZkC,EAAKC,YAAYQ,MAEpB,uBACE3C,UAAU,YACV4C,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,SAE/CP,SAAS,wBASzB,uBAAKxC,UAAU,gBACb,gBAAC,IAAD,W","sources":["webpack://yutagoto-blog/./src/components/bio.js","webpack://yutagoto-blog/./src/components/fontawesome.js","webpack://yutagoto-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport \"./fontawesome\"\n\nexport const PureBio = ({ data }) => {\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"px-4 py-10 bg-gray-50 dark:bg-gray-800 shadow-lg sm:rounded-xl sm:p-5\">\n      <div className=\"flex space-x-4\">\n        <div className=\"flex-none\">\n          <StaticImage\n            className=\"bio-avatar\"\n            layout=\"fixed\"\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n            src=\"../images/profile-pic.png\"\n            width={180}\n            height={180}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n\n        <div className=\"flex-1 flex flex-col space-y-3\">\n          <div>\n            <p className=\"text-3xl mb-2\">{author.name}</p>\n            <p className=\"text-xl\">{author.summary}</p>\n          </div>\n          <div className=\"flex-1 flex space-x-6\">\n            {social.map(s => (\n              <a\n                key={s.name}\n                href={s.url}\n                className=\"object-bottom\"\n                area-label={s.name}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                <span className=\"icon\">\n                  <i\n                    className={`fab fa-${s.name} fa-lg`}\n                    aria-hidden=\"true\"\n                  ></i>\n                </span>\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const Bio = () => (\n  <StaticQuery\n    query={graphql`\n      query BioQuery {\n        site {\n          siteMetadata {\n            author {\n              name\n              summary\n            }\n            social {\n              name\n              url\n            }\n          }\n        }\n      }\n    `}\n    render={data => <PureBio data={data} />}\n  />\n)\n","import { dom, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\n\nlibrary.add(faGithub, faTwitter, faAngleRight, faAngleLeft)\ndom.watch()\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Bio } from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"lg:flex lg:space-x-2\">\n        <Seo title=\"All posts\" />\n        <div className=\"lg:flex-grow max-w-screen-2xl\">\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <div\n                className=\"px-4 py-10 mb-2 bg-gray-50 dark:bg-gray-800 shadow-lg sm:rounded-xl sm:p-5\"\n                key={post.fields.slug}\n              >\n                <Link\n                  to={post.fields.slug}\n                  itemProp=\"url\"\n                  className=\"has-text-black\"\n                >\n                  <article\n                    className=\"media\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <div className=\"\">\n                      <div className=\"text-2xl mb-2\">{title}</div>\n                      <div className=\"text-sm mb-2\">\n                        {post.frontmatter.date}\n                      </div>\n                      <div\n                        className=\"text-base\"\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </div>\n                  </article>\n                </Link>\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"lg:flex-none\">\n          <Bio />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["PureBio","data","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","map","s","key","href","url","target","rel","Bio","StaticQuery","query","render","library","faGithub","faTwitter","faAngleRight","faAngleLeft","dom","location","siteTitle","title","posts","allMarkdownRemark","nodes","post","frontmatter","fields","slug","Link","to","itemProp","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}