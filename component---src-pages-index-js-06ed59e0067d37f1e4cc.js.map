{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/fontawesome.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["library","faGithub","faTwitter","dom","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","map","s","key","href","url","area-label","target","rel","aria-hidden","location","siteTitle","title","posts","allMarkdownRemark","nodes","post","frontmatter","fields","slug","Link","to","itemProp","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"y9BAGAA,cAAYC,MAAUC,OACtBC,cCQA,IAqEA,EArEY,WAAO,IAAD,IACVC,GAAOC,oBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,uBAAKA,UAAU,SACb,uBAAKA,UAAU,cACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAWF,uBAAKR,UAAU,iBACb,uBAAKA,UAAU,WACb,yBACE,8BAASJ,EAAOa,MAChB,2BACCb,EAAOc,UAGZ,uBAAKV,UAAU,mBACb,uBAAKA,UAAU,cACZD,EAAOY,KAAI,SAAAC,GAAC,OACX,qBACEC,IAAKD,EAAEH,KACPK,KAAMF,EAAEG,IACRf,UAAU,aACVgB,aAAYJ,EAAEH,KACdQ,OAAO,SACPC,IAAI,uBAEJ,wBAAMlB,UAAU,QACd,qBAAGA,UAAS,UAAYY,EAAEH,KAAQU,cAAY,qB,+FCXlE,UApDkB,SAAC,GAAwB,IAAD,EAArBzB,EAAqB,EAArBA,KAAM0B,EAAe,EAAfA,SACnBC,GAAY,UAAA3B,EAAKG,KAAKC,oBAAV,eAAwBwB,QAAxB,QACZC,EAAQ7B,EAAK8B,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,uBAAKtB,UAAU,WACb,uBAAKA,UAAU,4BACZuB,EAAMZ,KAAI,SAAAe,GACT,IAAMJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KAEpD,OACE,uBAAK7B,UAAU,YAAYa,IAAKa,EAAKE,OAAOC,MAC1C,gBAAC,EAAAC,KAAD,CACEC,GAAIL,EAAKE,OAAOC,KAChBG,SAAS,MACThC,UAAU,kBAEV,2BACEA,UAAU,QACViC,WAAS,EACTC,SAAS,6BAET,uBAAKlC,UAAU,WACb,yBACE,8BAASsB,GAAgB,IACzB,6BAAQI,EAAKC,YAAYQ,MACzB,2BACA,uBACEC,wBAAyB,CACvBC,OACEX,EAAKC,YAAYW,aAAeZ,EAAKa,SAEzCP,SAAS,yBAU3B,uBAAKhC,UAAU,UACb,gBAAC,IAAD","file":"component---src-pages-index-js-06ed59e0067d37f1e4cc.js","sourcesContent":["import { dom, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nlibrary.add(faGithub, faTwitter)\ndom.watch()\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport \"./fontawesome\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"box\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <StaticImage\n            className=\"bio-avatar\"\n            layout=\"fixed\"\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n            src=\"../images/profile-pic.png\"\n            width={50}\n            height={50}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <strong>{author.name}</strong>\n              <br />\n              {author.summary}\n            </p>\n          </div>\n          <nav className=\"level is-mobile\">\n            <div className=\"level-left\">\n              {social.map(s => (\n                <a\n                  key={s.name}\n                  href={s.url}\n                  className=\"level-item\"\n                  area-label={s.name}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <span className=\"icon\">\n                    <i className={`fab fa-${s.name}`} aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n              ))}\n            </div>\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <div className=\"columns\">\n        <div className=\"column is-three-quarters\">\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <div className=\"box mb-10\" key={post.fields.slug}>\n                <Link\n                  to={post.fields.slug}\n                  itemProp=\"url\"\n                  className=\"has-text-black\"\n                >\n                  <article\n                    className=\"media\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <div className=\"content\">\n                      <p>\n                        <strong>{title}</strong>{\" \"}\n                        <small>{post.frontmatter.date}</small>\n                        <br />\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html:\n                              post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </p>\n                    </div>\n                  </article>\n                </Link>\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"column\">\n          <Bio />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}