---
import type { MarkdownInstance } from "astro"

interface Props {
  posts: MarkdownInstance<Record<string, any>>[]
}

export const getStaticPaths = async () => {
  const allPosts = await Astro.glob("../../pages/posts/*/index.md")
  const uniqueTags = [
    ...new Set(allPosts.map(post => post.frontmatter.tags).flat()),
  ].filter(e => Boolean(e))

  return uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter(
      post => post.frontmatter.tags && post.frontmatter.tags.includes(tag)
    )
    return {
      params: { tag },
      props: { posts: filteredPosts },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props as Props
import Layout from "@/components/Layout.astro"
import ArticleCard from "@/components/ArticleCard.astro"
import Bio from "@/components/Bio.astro"
import Head from "@/components/Head.astro"
---

<html>
  <Head
    title={tag || ""}
    ogTitle={`${tag}の記事一覧`}
    ogDescription={`${tag}の記事一覧`}
  />
  <body>
    <Layout title={tag}>
      <h1 class="mb-2 text-4xl font-extrabold">
        {tag} 記事一覧
      </h1>
      <div class="lg:flex lg:space-x-2">
        <div class="max-w-screen-2xl lg:flex-grow">
          {
            posts.map(post => {
              return <ArticleCard post={post} />
            })
          }
        </div>
        <div class="mb-2 lg:flex-none">
          <Bio />
        </div>
      </div>
    </Layout>
  </body>
</html>
