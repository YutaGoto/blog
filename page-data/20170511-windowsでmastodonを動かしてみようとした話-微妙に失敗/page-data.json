{"componentChunkName":"component---src-templates-blog-post-js","path":"/20170511-windowsでmastodonを動かしてみようとした話-微妙に失敗/","result":{"data":{"site":{"siteMetadata":{"title":".ごっちの日記","siteUrl":"https://yutagoto.github.io"}},"markdownRemark":{"id":"f6feb734-b6f2-5d74-aff8-a23b60a2396b","excerpt":"こんにちは、ごっちです。 時間ができたので、何かしらの勉強したいよねーっていうやつから Docker の勉強をしたいなぁと。 なんとなく前回は RaspberryPi に Mastodon を入れてみようと思ったんだけど失敗。今回は Docker…","html":"<p>こんにちは、ごっちです。</p>\n<p>時間ができたので、何かしらの勉強したいよねーっていうやつから Docker の勉強をしたいなぁと。</p>\n<p>なんとなく前回は RaspberryPi に Mastodon を入れてみようと思ったんだけど失敗。今回は Docker を使って自作のなにかを作ってみるかとも思ったけど、なんか思い立って Mastodon を Local で立ててみるというお話。</p>\n<p>今回は、<a href=\"https://ai-create.net/magazine/2017/04/15/mastodon%E3%82%92docker%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F%EF%BC%81-%E3%81%AE%E3%81%A7%E3%80%81%E3%81%9D%E3%81%AE%E6%96%B9/\">Docker で Mastodon をローカルで動かしてみた！ ので、その方法をご紹介。</a> を参考に構築してみます。</p>\n<h2>Docker for Windows のインストール</h2>\n<p>公式の<a href=\"https://docs.docker.com/docker-for-windows/\">Get started with Docker for Windows</a>を参考にダウンロードしてくる。 bash でチャレンジしてみようとも思ったけれどもなんかうまくいかずに終わってしまったので、パッケージングされているものを使いました。</p>\n<p>ダウンロードしてぽちぽち設定すれば終わりますね。</p>\n<p>コマンドプロンプトで</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; docker --version\nDocker version 17.03.0-ce, build 60ccb22\n\n&gt; docker-compose --version\ndocker-compose version 1.11.2, build dfed245\n\nPS C:\\Users\\username&gt; docker --version Docker version 17.03.0-ce, build 60ccb22 PS C:\\Users\\username&gt; docker-compose --version docker-compose version 1.11.2, build dfed245</code></pre></div>\n<p>それぞれ実行できれば OK！</p>\n<h2>Mastodon を clone してくる</h2>\n<p>まぁ、<a href=\"https://github.com/tootsuite/mastodon\">Github</a>から.zip をダウンロードするなりで大丈夫です。カンタンカンタン</p>\n<h2>環境設定をする</h2>\n<p>.env.production.sample を .env.production に名前を変更する。</p>\n<p>.env.production の中身を編集する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Federation\n#LOCAL_DOMAIN=example.com\n#LOCAL_HTTPS=true\nLOCAL_DOMAIN=localhost:3000\nLOCAL_HTTPS=false</code></pre></div>\n<p>まぁ、localhost だけで確認するだけなので、https アクセスはいらないですよね。</p>\n<h2>一度 Build する</h2>\n<p>コマンドプロンプトで</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; docker-compose build\nreating network &quot;mastodon_default&quot; with the default driver\nPulling redis (redis:alpine)...\nalpine: Pulling from library/redis\n627beaf3eaaf: Pull complete\na503a4771a4a: Pull complete\n72c5d910c683: Pull complete\n6aadd3a49c30: Pull complete\nadf925aa1ad1: Pull complete\n0565da0f872e: Pull complete\n....</code></pre></div>\n<p>時間がかかるので、ゲームでもしながら待つ。</p>\n<h2>鍵を生成する</h2>\n<p>.env.production の PAPERCLIP<em>SECRET, SECRET</em>KEY<em>BASE, OTP</em>SECRET が空欄だったはずなので、そのキーを生成します。</p>\n<p>コマンドプロンプトで</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; docker-compose run --rm web rake secret\nkey-string</code></pre></div>\n<p>を 3 度実行する。それぞれの出力結果を PAPERCLIP<em>SECRET, SECRET</em>KEY<em>BASE, OTP</em>SECRET の右辺に張り付ける。</p>\n<h2>データベースを作成する</h2>\n<p>データベースを作成する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; docker-compose run --rm web rails db:migrate</code></pre></div>\n<h2>アセットファイルに作成</h2>\n<p>CSS や画像を作成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; docker-compose run --rm web rails assets:precompile</code></pre></div>\n<p>これも時間がかかるので、ゲームしながら待つ。</p>\n<h2>実際に起動する</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; docker-compose up\nmastodon_redis_1 is up-to-date\nmastodon_db_1 is up-to-date\nStarting mastodon_sidekiq_1\nStarting mastodon_streaming_1\nStarting mastodon_web_1\nAttaching to mastodon_redis_1, mastodon_db_1, mastodon_sidekiq_1, mastodon_web_1, mastodon_streaming_1\ndb_1         | The files belonging to this database system will be owned by user &quot;postgres&quot;.\ndb_1         | This user must also own the server process.</code></pre></div>\n<p>しばらくして</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">web_1        | =&gt; Booting Puma\nweb_1        | =&gt; Rails 5.0.2 application starting in production on [http://0.0.0.0:3000](http://0.0.0.0:3000)\nweb_1        | =&gt; Run `rails server -h` for more startup options\nsidekiq_1    | 2017-05-10T10:24:25.207Z 1 TID-grch3btb4 INFO: Booting Sidekiq 5.0.0 with redis options {:url=&gt;&quot;redis://redis:6379/0&quot;}</code></pre></div>\n<p>が確認出来たら、 <a href=\"http://localhost:3000/\">http://localhost:3000</a> にアクセスして確認する</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/4000/0*-mByBUVzw5XdHNtC.PNG\"></p>\n<p>なんかおかしいんですけど、、、、CSS と画像がきちんと当たってないんですけど。。。</p>\n<h2>一旦ここまで</h2>\n<p>もういちど precompile してみたけど、なんか残念。。。別の機会に挑戦してみます。。</p>\n<h2>References</h2>\n<ul>\n<li>Get started with Docker for Windows, <a href=\"https://docs.docker.com/docker-for-windows/\">https://docs.docker.com/docker-for-windows/</a></li>\n<li>Docker で Mastodon をローカルで動かしてみた！ ので、その方法をご紹介。, <a href=\"https://ai-create.net/magazine/2017/04/15/mastodon%E3%82%92docker%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F%EF%BC%81-%E3%81%AE%E3%81%A7%E3%80%81%E3%81%9D%E3%81%AE%E6%96%B9/\">https://ai-create.net/magazine/2017/04/15/mastodon%E3%82%92docker%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F%EF%BC%81-%E3%81%AE%E3%81%A7%E3%80%81%E3%81%9D%E3%81%AE%E6%96%B9/</a></li>\n<li>tootsuite/mastodon, <a href=\"https://github.com/tootsuite/mastodon\">https://github.com/tootsuite/mastodon</a></li>\n<li>Mastodon を RaspberryPi で立ち上げようとしたお話（失敗）, <a href=\"https://medium.com/@gggooottto/mastodon%E3%82%92raspberrypi%E3%81%A7%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%9F%E3%81%8A%E8%A9%B1-%E5%A4%B1%E6%95%97-1ffca38a1b98\">https://medium.com/@gggooottto/mastodon%E3%82%92raspberrypi%E3%81%A7%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%9F%E3%81%8A%E8%A9%B1-%E5%A4%B1%E6%95%97-1ffca38a1b98</a></li>\n<li>Gist, <a href=\"https://gist.github.com/YutaGoto/082ac9eac0cf84221db80993b7a67f91\">https://gist.github.com/YutaGoto/082ac9eac0cf84221db80993b7a67f91</a></li>\n</ul>\n<p><em>Originally published at <a href=\"https://gist.github.com/YutaGoto/082ac9eac0cf84221db80993b7a67f91\">gist.github.com</a>.</em></p>","fields":{"slug":"/20170511-windowsでmastodonを動かしてみようとした話-微妙に失敗/"},"frontmatter":{"title":"windowsでmastodonを動かしてみようとした話（微妙に失敗）","date":"May 11, 2017","description":"windowsでmastodonを動かしてみようとした話（微妙に失敗）"}},"previous":{"fields":{"slug":"/20170501-mastodonをraspberrypiで立ち上げようとしたお話-失敗/"},"frontmatter":{"title":"MastodonをRaspberryPiで立ち上げようとしたお話（失敗）"}},"next":{"fields":{"slug":"/20170512-dockerでrailsプロジェクトを作ってみた/"},"frontmatter":{"title":"DockerでRailsプロジェクトを作ってみた"}}},"pageContext":{"id":"f6feb734-b6f2-5d74-aff8-a23b60a2396b","previousPostId":"a6a16c83-a8a8-5e12-965b-5a43cbd99077","nextPostId":"1f499595-27b0-5571-91ec-25f0518f6dca"}},"staticQueryHashes":["2137539840","2201837728"]}