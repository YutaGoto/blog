{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/fontawesome.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["library","faGithub","faTwitter","dom","PureBio","data","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","map","s","key","href","url","area-label","target","rel","aria-hidden","Bio","StaticQuery","query","render","location","siteTitle","title","posts","allMarkdownRemark","nodes","post","frontmatter","fields","slug","Link","to","itemProp","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"4/BAGAA,cAAYC,MAAUC,OACtBC,cCCO,IAAMC,EAAU,SAAC,GAAc,IAAD,IAAXC,EAAW,EAAXA,KAClBC,EAAM,UAAGD,EAAKE,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGJ,EAAKE,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,yEACb,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,aACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAYF,uBAAKR,UAAU,UACb,2BACE,yBACE,8BAASJ,EAAOa,MAChB,2BACCb,EAAOc,UAGZ,uBAAKV,UAAU,kBACZD,EAAOY,KAAI,SAAAC,GAAC,OACX,qBACEC,IAAKD,EAAEH,KACPK,KAAMF,EAAEG,IACRf,UAAU,GACVgB,aAAYJ,EAAEH,KACdQ,OAAO,SACPC,IAAI,uBAEJ,wBAAMlB,UAAU,QACd,qBAAGA,UAAS,UAAYY,EAAEH,KAAQU,cAAY,mBAWnDC,EAAM,kBACjB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAgBLC,OAAQ,SAAA5B,GAAI,OAAI,gBAACD,EAAD,CAASC,KAAMA,S,+FCZnC,UAvDkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAM6B,EAAe,EAAfA,SACnBC,GAAY,UAAA9B,EAAKE,KAAKC,oBAAV,eAAwB4B,QAAxB,QACZC,EAAQhC,EAAKiC,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,uBAAKzB,UAAU,wBACb,gBAAC,IAAD,CAAK0B,MAAM,cACX,uBAAK1B,UAAU,iCACZ2B,EAAMhB,KAAI,SAAAmB,GACT,IAAMJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KAEpD,OACE,uBACEjC,UAAU,6EACVa,IAAKiB,EAAKE,OAAOC,MAEjB,gBAAC,EAAAC,KAAD,CACEC,GAAIL,EAAKE,OAAOC,KAChBG,SAAS,MACTpC,UAAU,kBAEV,2BACEA,UAAU,QACVqC,WAAS,EACTC,SAAS,6BAET,uBAAKtC,UAAU,IACb,yBACE,0BAAQA,UAAU,WAAW0B,GAAgB,IAC7C,6BAAQI,EAAKC,YAAYQ,MACzB,2BACA,uBACEC,wBAAyB,CACvBC,OACEX,EAAKC,YAAYW,aAAeZ,EAAKa,SAEzCP,SAAS,yBAU3B,uBAAKpC,UAAU,gBACb,gBAAC,IAAD","file":"component---src-pages-index-js-b2eae6b5dbdc167cd9ba.js","sourcesContent":["import { dom, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nlibrary.add(faGithub, faTwitter)\ndom.watch()\n","import * as React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport \"./fontawesome\"\n\nexport const PureBio = ({ data }) => {\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"px-4 py-10 bg-gray-50 dark:bg-gray-900 shadow-lg sm:rounded-xl sm:p-5\">\n      <div className=\"flex space-x-4\">\n        <div className=\"flex-none\">\n          <StaticImage\n            className=\"bio-avatar\"\n            layout=\"fixed\"\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n            src=\"../images/profile-pic.png\"\n            width={50}\n            height={50}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n\n        <div className=\"flex-1\">\n          <div>\n            <p>\n              <strong>{author.name}</strong>\n              <br />\n              {author.summary}\n            </p>\n          </div>\n          <div className=\"flex space-x-4\">\n            {social.map(s => (\n              <a\n                key={s.name}\n                href={s.url}\n                className=\"\"\n                area-label={s.name}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                <span className=\"icon\">\n                  <i className={`fab fa-${s.name}`} aria-hidden=\"true\"></i>\n                </span>\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const Bio = () => (\n  <StaticQuery\n    query={graphql`\n      query BioQuery {\n        site {\n          siteMetadata {\n            author {\n              name\n              summary\n            }\n            social {\n              name\n              url\n            }\n          }\n        }\n      }\n    `}\n    render={data => <PureBio data={data} />}\n  />\n)\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Bio } from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"lg:flex lg:space-x-2\">\n        <Seo title=\"All posts\" />\n        <div className=\"lg:flex-grow max-w-screen-2xl\">\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <div\n                className=\"px-4 py-10 mb-2 bg-gray-50 dark:bg-gray-900 shadow-lg sm:rounded-xl sm:p-5\"\n                key={post.fields.slug}\n              >\n                <Link\n                  to={post.fields.slug}\n                  itemProp=\"url\"\n                  className=\"has-text-black\"\n                >\n                  <article\n                    className=\"media\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <div className=\"\">\n                      <p>\n                        <strong className=\"text-xl\">{title}</strong>{\" \"}\n                        <small>{post.frontmatter.date}</small>\n                        <br />\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html:\n                              post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </p>\n                    </div>\n                  </article>\n                </Link>\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"lg:flex-none\">\n          <Bio />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}