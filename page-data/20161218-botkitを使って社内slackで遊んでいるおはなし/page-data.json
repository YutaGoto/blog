{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/20161218-botkitを使って社内slackで遊んでいるおはなし/",
    "result": {"data":{"site":{"siteMetadata":{"title":".ごっちの日記","siteUrl":"https://yutagoto.github.io"}},"markdownRemark":{"id":"4cf41537-90a9-5031-9ddf-af26884e35b2","excerpt":"こんにちは、ごっちです。ちょっとだけ元気です。 最近は本業とは別に SlackBot を開発していたりしているので、そのことについて書いていきます。 なんか面白くしたいなぁとか思いながらこういう記事を発見するというやつです。 SlackBot を作るならコレ一択！Watson との連携で注目が高まる Botkit…","html":"<p>こんにちは、ごっちです。ちょっとだけ元気です。</p>\n<p>最近は本業とは別に SlackBot を開発していたりしているので、そのことについて書いていきます。</p>\n<p>なんか面白くしたいなぁとか思いながらこういう記事を発見するというやつです。</p>\n<p><a href=\"https://bita.jp/dml/slack_botkit\">SlackBot を作るならコレ一択！Watson との連携で注目が高まる Botkit をつかってみた</a></p>\n<p>なかなかかんたんに使えてかんたんにカスタマイズできそうなやつがあるじゃないですか！\nさっそく Fork して使ってしまいます。。。</p>\n<p>リリース方法とかは上のリンクから辿ってほしいけれども、かなりかんたんにリリースできます！すばらしや。。。</p>\n<p>なんかテキトーに作ったやつを紹介していきます。</p>\n<h3>あらかじめ登録したものの反応について</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*v-jEXJb7Eo1j4iIl.PNG\" alt=\"\"></p>\n<p>controller.hears([‘こんにちは’], ‘direct_message,direct_mention,mention’, function (bot, message) {\nvar helloTalk = [\n‘こんにちは！私は <em>Botkit 製の Bot</em> です！’,\n‘こんにちは！調子はいかがですか？’,\n‘こんにちは！’,\n‘こんにちは！ <code class=\"language-text\">○○ って呼んで</code>って話しかけると、名前を忘れるまで覚えますよ!’,\n‘こんにちは！こんにちは！こんにちは！こんにちは！こんにちは！’,\n];\nvar selectHelloTalk = helloTalk[Math.floor(Math.random() * helloTalk.length)];\nbot.reply(message, selectHelloTalk);\n});</p>\n<p>こんにちはに反応して、ランダムで反応します。。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*Dzo5kpRtm0S1i9V2.PNG\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([‘昼ごはん’, ‘おなかすいた’, ‘お腹すいた’], direct_message,direct_mention,mention’, function (bot, message) {\n var lunch = [‘中華’, ‘そば’, ‘にいむら’, ‘オリジンキッチン’, ‘もちもち’, ‘丸亀製麺’, ‘裏の中華’, ‘インドカレー’, ‘ココイチ’, ‘代々木ビレッジ’, ‘カレーメシ’, ‘おにぎり’, ‘もやし炒め’, ‘ケナリ’, ‘信長’, ‘バリスタ’, ‘トルコ’, ‘冷やし中華’, ‘ビール’, ‘食べない’];\n var lunchTalk = lunch[Math.floor(Math.random() * lunch.length)];\n bot.reply(message, lunchTalk);\n});</code></pre></div>\n<p>おなかすいた！とかに反応して、ごはん（オフィスの近くにあるお店とか）をおすすめします。ここまで長い配列にするなら DB かべつ JSON でもいいかもしれないですね。。。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*EmkNAfB5eFhpY8yb.PNG\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([‘お御籤’, ‘御御籤’, ‘お神籤’, ‘御神籤’, ‘おみくじ’],direct_message,direct_mention,mention’, function (bot, message) {\n var omikujiArray = [‘吉’ ,’小吉’ ,’大吉’ ,’中吉’ ,’半吉’ ,’末小吉’ ,’末吉’ ,’凶’ ,’半凶’ ,’小凶’ ,’末凶’ ,’大凶’, ‘古’, ‘キチ’, ‘区’, ‘(๑•̀ㅂ•́)و✧’];\n var omikujiResult = omikujiArray[Math.floor(Math.random() * omikujiArray.length)];\n bot.reply(message, ‘*’ + omikujiResult + ‘*’);\n});</code></pre></div>\n<p>おみくじできます。おみくじの回答とはまったく関係のないものも含まれていますが、そこはご愛嬌です。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*AYAK6AZ3G3OQGi7q.PNG\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([‘じゃんけん’], ‘direct_message,direct_mention,mention’, function (bot, message) {function sayAiko(convo) {\n    convo.say('あいこですね。また遊びましょう！:wink:');\n}\n\nfunction sayWin(convo) {\n    convo.say('私の勝ちです！じゃんけん強いのがばれましたね:muscle:。また遊びましょう！:blush:');\n}\n\nfunction sayLose(convo) {\n    convo.say('あなたの勝ちです！:congratulations:あなたはお強いのですね:sushi:。また遊びましょう！:hugging_face:');\n}\n\nbot.reply(message, 'じゃんけんですか？いいですね！:fist::v::hand:');\nbot.startConversation(message, function (err, convo) {\n    var jankenRPS = [\"r\", \"s\", \"p\"];\n    var selectJanken = jankenRPS[Math.floor(Math.random() * jankenRPS.length)];\n    convo.ask('じゃんけーん... `グー` `チョキ` `パー`', [\n        {\n            pattern: 'グー',\n            callback: function (response, convo) {\n                if (selectJanken === \"r\") {\n                    convo.say(\"グー！\");\n                    sayAiko(convo);\n                } else if (selectJanken === \"s\") {\n                    convo.say(\"チョキ！\");\n                    sayLose(convo);\n                } else if (selectJanken === \"p\") {\n                    convo.say(\"パー！\");\n                    sayWin(convo);\n                } else {\n                    convo.say(\"すみません。じゃんけんができませんでした。また遊びましょう！:+1:\");\n                }\n                convo.next();\n            }\n        },\n        {\n            pattern: 'チョキ',\n            callback: function (response, convo) {\n                if (selectJanken === \"r\") {\n                    convo.say(\"グー！\");\n                    sayWin(convo);\n                } else if (selectJanken === \"s\") {\n                    convo.say(\"チョキ！\");\n                    sayAiko(convo);\n                } else if (selectJanken === \"p\") {\n                    convo.say(\"パー！\");\n                    sayLose(convo);\n                } else {\n                    convo.say(\"すみません。じゃんけんができませんでした。また遊びましょう！:+1:\");\n                }\n                convo.next();\n            }\n        },\n        {\n            pattern: 'パー',\n            callback: function (response, convo) {\n                if (selectJanken === \"r\") {\n                    convo.say(\"グー！\");\n                    sayLose(convo);\n                } else if (selectJanken === \"s\") {\n                    convo.say(\"チョキ！\");\n                    sayWin(convo);\n                } else if (selectJanken === \"p\") {\n                    convo.say(\"パー！\");\n                    sayAiko(convo);\n                } else {\n                    convo.say(\"すみません。じゃんけんができませんでした。また遊びましょう！:+1:\");\n                }\n                convo.next();\n            }\n        },\n        {\n            default: true,\n            callback: function (response, convo) {\n                convo.say('よくわかりませんでした。また遊びましょう');\n                convo.next();\n            }\n        }\n    ]);\n})\n\n});\n```</code></pre></div>\n<p>じゃんけんができます。ただしい使い方としては、質問して帰ってきたものに対してなにかしら反応するっていうことですが、質問がじゃんけんのかけごえなので、まちがっていないはず。。</p>\n<p>ただ、じゃんけんの判定をもうちょっとどうにかできそうな感じがあるのでリファクタリングしたいところですよね。</p>\n<p>API に問い合わせて反応させるもの</p>\n<p><a href=\"http://smsurf.app-rox.com/api/\">API List 100+</a>にあったものを試していっています。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*ODDSxol62wBhbYT0.png\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears(['旅行先’], 'direct_message,direct_mention,mention,ambient’, function (bot, message) {\n    function getCity(prefecture) {\n        var http = require('http’);\n        var urlCity = \"http://geoapi.heartrails.com/api/json?method=getCities&amp;prefecture=”\n        var encodePrefecture = encodeURI(prefecture)\n        http.get(urlCity + encodePrefecture, function (res) {\n            res.setEncoding('utf8’);\n            var body = “”;\n            res.on('data’, function(data) {\n                body += data;\n            });\n            res.on('end’, function(data) {\n                var c = JSON.parse(body);\n                cities = c.response.location;\n                city = cities[Math.floor(Math.random() * cities.length)];\n                bot.reply(message, ’*’ + prefecture + city.city + ’* に行ってみましょう！:airplane_departure:’);\n            });\n        });\n    }\n\nfunction getPrefecture() {\n    var http = require('http');\n    var urlPrefecture = \"http://geoapi.heartrails.com/api/json?method=getPrefectures\";\n    http.get(urlPrefecture, function (res) {\n        res.setEncoding('utf8');\n        var body = \"\";\n        res.on('data', function(data) {\n            body += data;\n        });\n        res.on('end', function(data) {\n            var p = JSON.parse(body);\n            prefectures = p.response.prefecture;\n            pref = prefectures[Math.floor(Math.random() * prefectures.length)];\n            getCity(pref)\n        });\n    });\n}\ngetPrefecture();\n\n});\n```</code></pre></div>\n<p>旅行先！とつぶやくと、都道府県と市区町村を取得する API に問い合わせて、ランダムに市区町村を返答します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears(['天気', 'てんき'], 'direct_message,direct_mention,mention', function (bot, message) {\n    bot.reply(message, \"天気情報を取得しています...\");\n    bot.startConversation(message, function (err, convo) {\n        var http = require('http');\n        http.get(\"http://weather.livedoor.com/forecast/webservice/json/v1?city=130010\", function (result) {\n            var time = new Date();\n            var dateCond = time.getHours() &lt; 18 ? \"今日\" : \"明日\";\n            var body = '';\n            result.setEncoding('utf8');\n            result.on('data', function(data) {\n                body += data;\n            });\n            result.on('end', function(data) {\n                var v = JSON.parse(body);\n                var weather = v.forecasts[0];\n                if (time.getHours() &lt; 18) {\n                    var weather = v.forecasts[0];\n                } else {\n                    var weather = v.forecasts[1];\n                }\n                convo.say(weather.dateLabel + \"の\" + v.title + \"は\" + weather.telop + \"です。最高気温は\" + weather.temperature.max.celsius + \"度です！\");\n                convo.next();\n            });\n        });\n    });\n});</code></pre></div>\n<p>天気とつぶやくと、東京の今日または明日の天気と最高気温を返します。わりと実用的かもしれません。</p>\n<p>三項演算子を使っているところと使っていないところが混ざっているのでリファクタ対象ですね。レスポンスに Null が存在しててエラーになるという、、ちょっと対策せねば。。。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/3288/0*VAalKSTLAVaWtsIr.PNG\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears(['(.+)って何'], 'direct_message,direct_mention,mention', function (bot, message) {\n    var thing = message.match[1];\n    var encodeThing = encodeURI(thing);\n    bot.reply(message, thing + \"を調べています...\");\n    bot.startConversation(message, function (err, convo) {\n        var http = require('http');\n        http.get(\"http://wikipedia.simpleapi.net/api?output=json&amp;keyword=\" + encodeThing, function (result) {\n            var body = '';\n            result.setEncoding('utf8');\n            result.on('data', function(data) {\n                body += data;\n            });\n            result.on('end', function(data) {\n                var v = JSON.parse(body);\n                if (v === null) {\n                    convo.say(thing + 'が見つかりませんでした。');\n                    convo.next();\n                } else {\n                    convo.say(v[0].body);\n                    convo.next();\n                }\n            });\n        });\n    });\n});</code></pre></div>\n<p>hoge って何？で hoge について Wikipedia します。っでいい感じに Description を返答します。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2516/0*txjc6AuIBUsh0Rjj.PNG\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears(['(.+)でニュース検索'], 'direct_message,direct_mention,mention', function (bot, message) {\n    var thing = message.match[1];\n    var encodeThing = encodeURI(thing);\n    bot.reply(message, thing + \"のニュースを探しています...\");\n    bot.startConversation(message, function (err, convo) {\n        var http = require('http');\n        var url = \"http://api.search.nicovideo.jp/api/v2/news/contents/search?targets=title,tags&amp;fields=contentId,title,startTime&amp;_context=slackbot&amp;_limit=10&amp;_sort=startTime&amp;q=\" + encodeThing;\n        http.get(url, function (result) {\n            var body = '';\n            result.setEncoding('utf8');\n            result.on('data', function(data) {\n                body += data;\n            });\n            result.on('end', function(data) {\n                var m = JSON.parse(body);\n                var nicoArray = [];\n                var datas = m.data;\n                if (datas) {\n                    if (datas.length > 0) {\n                        datas.forEach(function(val) {\n                            nicoArray.push(val.title + \" : [http://nico.ms/](http://nico.ms/)\" + val.contentId + \" 公開日: \" + new Date(val.startTime).toLocaleString());\n                        });\n                        convo.say(nicoArray.join('n'));\n                        convo.next();\n                    } else {\n                        convo.say('みつかりませんでした。');\n                        convo.next();\n                    }\n                } else {\n                    convo.say(m.meta.errorMessage);\n                    convo.next();\n                }\n            });\n        });\n    });\n});</code></pre></div>\n<p>hoge でニュース検索！と呼びかけると、hoge に関するニコニコニュースを検索して返答します。オープンなニュースサイトの API がなかったのでこれを採用。。。URL の生成も <a href=\"http://nico.ms/\">http://nico.ms/</a> + val.contentId なので、結構楽ちんですね。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*pfWLOiv4sOvp6ftm.PNG\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears(['(.+)でお店を検索'], 'direct_message,direct_mention,mention,ambient', function (bot, message) {\n    var http = require('http');\n    var thing = message.match[1];\n    var encodeWord = encodeURI(thing);\n    url = 'http://webservice.recruit.co.jp/hotpepper/shop/v1/?key=' + process.env.hotpepperKey +'&amp;format=json&amp;keyword=' + encodeWord;\n    bot.reply(message, thing + \"でお店を調べています...\");\n    bot.startConversation(message, function (err, convo) {\n        http.get(url, function (result) {\n            var body = '';\n            var shopArray = [];\n            result.setEncoding('utf8');\n            result.on('data', function(data) {\n                body += data;\n            });\n            result.on('end', function(data) {\n                var v = JSON.parse(body);\n                var r = v.results;\n                if (r.shop) {\n                    if (r.shop.length > 0) {\n                        r.shop.forEach(function(val) {\n                            shopArray.push(val.name + ' : ' + val.urls.pc);\n                        });\n                        convo.say(shopArray.join('n'));\n                        convo.next();\n                    } else {\n                        convo.say('ヒットしませんでした');\n                        convo.next();\n                    }\n                } else {\n                    convo.say('見つからないかヒット数が多すぎるのでキーワードを整理してください');\n                    convo.next();\n                }\n            });\n        });\n    });\n});</code></pre></div>\n<p>hoge でお店を検索！っと呼びかけるとホットペッパーグルメでキーワード検索して返答します。うまい言葉を選ばないとなかなか帰ってこないです。。検索クエリーを考えるのが難しいところです。。</p>\n<p>そのへんを考慮して、形態素解析してもうちょっと検索クエリーの選定をしたいところです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears(['iPhone10'], 'direct_message,direct_mention,mention,ambient', function (bot, message) {\n    bot.reply(message, \"iPhone10!!!\");\n    var https = require('https');\n    var url = \"https://slack.com/api/chat.postMessage?token=\" + process.env.token + \"&amp;channel=%23\" + process.env.botChannel + \"&amp;text=%3Alongiphone1%3A%0A%3Alongiphone2%3A%0A%3Alongiphone3%3A%0A%3Alongiphone4%3A&amp;username=iphone10&amp;icon_emoji=%3Alongiphone1%3A%3Alongiphone2%3A%3Alongiphone3%3A%3Alongiphone4%3A&amp;pretty=1\";\n    https.get(url);\n});</code></pre></div>\n<p>iPhone10 とつぶやくと iPhone10 っぽい反応をします。Slack そのものの API もあり、Get リクエストするだけで Bot っぽいポストもできるのでやっちゃいますよね。そして ICON の部分に微妙にバグがあるので、逆にそこを活かすというやーつ</p>\n<p>そんな感じです。</p>\n<p>まだまだ使えそうな API があるので、試して入れていってみたいと思います。NodeJS なのでわりとサクサク開発ができるので、そこもいいところですかね？</p>\n<p>いろいろ取り入れて、賢い Bot を作っていきましょう！！</p>","fields":{"slug":"/20161218-botkitを使って社内slackで遊んでいるおはなし/"},"frontmatter":{"title":"Botkitを使って社内Slackで遊んでいるおはなし","date":"December 18, 2016","description":"Botkitを使って社内Slackで遊んでいるおはなし","tags":null}},"previous":{"fields":{"slug":"/20161204-podcasts/"},"frontmatter":{"title":"Podcasts"}},"next":{"fields":{"slug":"/20161226-2016年の振り返り/"},"frontmatter":{"title":"2016年の振り返り"}}},"pageContext":{"id":"4cf41537-90a9-5031-9ddf-af26884e35b2","previousPostId":"b8b551c4-0da8-55cf-aaf6-7c8fbc1a82a6","nextPostId":"503d3ebc-49c0-5b9e-905c-a724d452ea8e"}},
    "staticQueryHashes": ["2137539840","2183174749"]}