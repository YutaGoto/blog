{"componentChunkName":"component---src-templates-blog-post-js","path":"/20161218-botkitを使って社内slackで遊んでいるおはなし/","result":{"data":{"site":{"siteMetadata":{"title":".ごっちの日記","siteUrl":"https://yutagoto.github.io"}},"markdownRemark":{"id":"b3e99917-28ba-51c3-bc12-3763157ddfb8","excerpt":"こんにちは、ごっちです。ちょっとだけ元気です。 最近は本業とは別に SlackBot を開発していたりしているので、そのことについて書いていきます。 なんか面白くしたいなぁとか思いながらこういう記事を発見するというやつです。 SlackBot を作るならコレ一択！Watson との連携で注目が高まる Botkit…","html":"<p>こんにちは、ごっちです。ちょっとだけ元気です。</p>\n<p>最近は本業とは別に SlackBot を開発していたりしているので、そのことについて書いていきます。</p>\n<p>なんか面白くしたいなぁとか思いながらこういう記事を発見するというやつです。</p>\n<p><a href=\"https://bita.jp/dml/slack_botkit\">SlackBot を作るならコレ一択！Watson との連携で注目が高まる Botkit をつかってみた</a></p>\n<p>なかなかかんたんに使えてかんたんにカスタマイズできそうなやつがあるじゃないですか！\nさっそく Fork して使ってしまいます。。。</p>\n<p>リリース方法とかは上のリンクから辿ってほしいけれども、かなりかんたんにリリースできます！すばらしや。。。</p>\n<p>なんかテキトーに作ったやつを紹介していきます。</p>\n<h3>あらかじめ登録したものの反応について</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*v-jEXJb7Eo1j4iIl.PNG\"></p>\n<p>controller.hears([‘こんにちは’], ‘direct<em>message,direct</em>mention,mention’, function (bot, message) {\nvar helloTalk = [\n‘こんにちは！私は <em>Botkit 製の Bot</em> です！’,\n‘こんにちは！調子はいかがですか？’,\n‘こんにちは！’,\n‘こんにちは！ <code class=\"language-text\">○○ って呼んで</code>って話しかけると、名前を忘れるまで覚えますよ!’,\n‘こんにちは！こんにちは！こんにちは！こんにちは！こんにちは！’,\n];\nvar selectHelloTalk = helloTalk[Math.floor(Math.random() * helloTalk.length)];\nbot.reply(message, selectHelloTalk);\n});</p>\n<p>こんにちはに反応して、ランダムで反応します。。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*Dzo5kpRtm0S1i9V2.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([‘昼ごはん’, ‘おなかすいた’, ‘お腹すいた’], direct_message,direct_mention,mention’, function (bot, message) {\n var lunch = [‘中華’, ‘そば’, ‘にいむら’, ‘オリジンキッチン’, ‘もちもち’, ‘丸亀製麺’, ‘裏の中華’, ‘インドカレー’, ‘ココイチ’, ‘代々木ビレッジ’, ‘カレーメシ’, ‘おにぎり’, ‘もやし炒め’, ‘ケナリ’, ‘信長’, ‘バリスタ’, ‘トルコ’, ‘冷やし中華’, ‘ビール’, ‘食べない’];\n var lunchTalk = lunch[Math.floor(Math.random() * lunch.length)];\n bot.reply(message, lunchTalk);\n});</code></pre></div>\n<p>おなかすいた！とかに反応して、ごはん（オフィスの近くにあるお店とか）をおすすめします。ここまで長い配列にするなら DB かべつ JSON でもいいかもしれないですね。。。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*EmkNAfB5eFhpY8yb.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([‘お御籤’, ‘御御籤’, ‘お神籤’, ‘御神籤’, ‘おみくじ’],direct_message,direct_mention,mention’, function (bot, message) {\n var omikujiArray = [‘吉’ ,’小吉’ ,’大吉’ ,’中吉’ ,’半吉’ ,’末小吉’ ,’末吉’ ,’凶’ ,’半凶’ ,’小凶’ ,’末凶’ ,’大凶’, ‘古’, ‘キチ’, ‘区’, ‘(๑•̀ㅂ•́)و✧’];\n var omikujiResult = omikujiArray[Math.floor(Math.random() * omikujiArray.length)];\n bot.reply(message, ‘*’ + omikujiResult + ‘*’);\n});</code></pre></div>\n<p>おみくじできます。おみくじの回答とはまったく関係のないものも含まれていますが、そこはご愛嬌です。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*AYAK6AZ3G3OQGi7q.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([‘じゃんけん’], ‘direct_message,direct_mention,mention’, function (bot, message) {function sayAiko(convo) {\n    convo.say(&#39;あいこですね。また遊びましょう！:wink:&#39;);\n}\n\nfunction sayWin(convo) {\n    convo.say(&#39;私の勝ちです！じゃんけん強いのがばれましたね:muscle:。また遊びましょう！:blush:&#39;);\n}\n\nfunction sayLose(convo) {\n    convo.say(&#39;あなたの勝ちです！:congratulations:あなたはお強いのですね:sushi:。また遊びましょう！:hugging_face:&#39;);\n}\n\nbot.reply(message, &#39;じゃんけんですか？いいですね！:fist::v::hand:&#39;);\nbot.startConversation(message, function (err, convo) {\n    var jankenRPS = [&quot;r&quot;, &quot;s&quot;, &quot;p&quot;];\n    var selectJanken = jankenRPS[Math.floor(Math.random() * jankenRPS.length)];\n    convo.ask(&#39;じゃんけーん... `グー` `チョキ` `パー`&#39;, [\n        {\n            pattern: &#39;グー&#39;,\n            callback: function (response, convo) {\n                if (selectJanken === &quot;r&quot;) {\n                    convo.say(&quot;グー！&quot;);\n                    sayAiko(convo);\n                } else if (selectJanken === &quot;s&quot;) {\n                    convo.say(&quot;チョキ！&quot;);\n                    sayLose(convo);\n                } else if (selectJanken === &quot;p&quot;) {\n                    convo.say(&quot;パー！&quot;);\n                    sayWin(convo);\n                } else {\n                    convo.say(&quot;すみません。じゃんけんができませんでした。また遊びましょう！:+1:&quot;);\n                }\n                convo.next();\n            }\n        },\n        {\n            pattern: &#39;チョキ&#39;,\n            callback: function (response, convo) {\n                if (selectJanken === &quot;r&quot;) {\n                    convo.say(&quot;グー！&quot;);\n                    sayWin(convo);\n                } else if (selectJanken === &quot;s&quot;) {\n                    convo.say(&quot;チョキ！&quot;);\n                    sayAiko(convo);\n                } else if (selectJanken === &quot;p&quot;) {\n                    convo.say(&quot;パー！&quot;);\n                    sayLose(convo);\n                } else {\n                    convo.say(&quot;すみません。じゃんけんができませんでした。また遊びましょう！:+1:&quot;);\n                }\n                convo.next();\n            }\n        },\n        {\n            pattern: &#39;パー&#39;,\n            callback: function (response, convo) {\n                if (selectJanken === &quot;r&quot;) {\n                    convo.say(&quot;グー！&quot;);\n                    sayLose(convo);\n                } else if (selectJanken === &quot;s&quot;) {\n                    convo.say(&quot;チョキ！&quot;);\n                    sayWin(convo);\n                } else if (selectJanken === &quot;p&quot;) {\n                    convo.say(&quot;パー！&quot;);\n                    sayAiko(convo);\n                } else {\n                    convo.say(&quot;すみません。じゃんけんができませんでした。また遊びましょう！:+1:&quot;);\n                }\n                convo.next();\n            }\n        },\n        {\n            default: true,\n            callback: function (response, convo) {\n                convo.say(&#39;よくわかりませんでした。また遊びましょう&#39;);\n                convo.next();\n            }\n        }\n    ]);\n})\n\n});\n```</code></pre></div>\n<p>じゃんけんができます。ただしい使い方としては、質問して帰ってきたものに対してなにかしら反応するっていうことですが、質問がじゃんけんのかけごえなので、まちがっていないはず。。</p>\n<p>ただ、じゃんけんの判定をもうちょっとどうにかできそうな感じがあるのでリファクタリングしたいところですよね。</p>\n<p>API に問い合わせて反応させるもの</p>\n<p><a href=\"http://smsurf.app-rox.com/api/\">API List 100+</a>にあったものを試していっています。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*ODDSxol62wBhbYT0.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([&#39;旅行先’], &#39;direct_message,direct_mention,mention,ambient’, function (bot, message) {\n    function getCity(prefecture) {\n        var http = require(&#39;http’);\n        var urlCity = &quot;http://geoapi.heartrails.com/api/json?method=getCities&amp;prefecture=”\n        var encodePrefecture = encodeURI(prefecture)\n        http.get(urlCity + encodePrefecture, function (res) {\n            res.setEncoding(&#39;utf8’);\n            var body = “”;\n            res.on(&#39;data’, function(data) {\n                body += data;\n            });\n            res.on(&#39;end’, function(data) {\n                var c = JSON.parse(body);\n                cities = c.response.location;\n                city = cities[Math.floor(Math.random() * cities.length)];\n                bot.reply(message, ’*’ + prefecture + city.city + ’* に行ってみましょう！:airplane_departure:’);\n            });\n        });\n    }\n\nfunction getPrefecture() {\n    var http = require(&#39;http&#39;);\n    var urlPrefecture = &quot;http://geoapi.heartrails.com/api/json?method=getPrefectures&quot;;\n    http.get(urlPrefecture, function (res) {\n        res.setEncoding(&#39;utf8&#39;);\n        var body = &quot;&quot;;\n        res.on(&#39;data&#39;, function(data) {\n            body += data;\n        });\n        res.on(&#39;end&#39;, function(data) {\n            var p = JSON.parse(body);\n            prefectures = p.response.prefecture;\n            pref = prefectures[Math.floor(Math.random() * prefectures.length)];\n            getCity(pref)\n        });\n    });\n}\ngetPrefecture();\n\n});\n```</code></pre></div>\n<p>旅行先！とつぶやくと、都道府県と市区町村を取得する API に問い合わせて、ランダムに市区町村を返答します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([&#39;天気&#39;, &#39;てんき&#39;], &#39;direct_message,direct_mention,mention&#39;, function (bot, message) {\n    bot.reply(message, &quot;天気情報を取得しています...&quot;);\n    bot.startConversation(message, function (err, convo) {\n        var http = require(&#39;http&#39;);\n        http.get(&quot;http://weather.livedoor.com/forecast/webservice/json/v1?city=130010&quot;, function (result) {\n            var time = new Date();\n            var dateCond = time.getHours() &lt; 18 ? &quot;今日&quot; : &quot;明日&quot;;\n            var body = &#39;&#39;;\n            result.setEncoding(&#39;utf8&#39;);\n            result.on(&#39;data&#39;, function(data) {\n                body += data;\n            });\n            result.on(&#39;end&#39;, function(data) {\n                var v = JSON.parse(body);\n                var weather = v.forecasts[0];\n                if (time.getHours() &lt; 18) {\n                    var weather = v.forecasts[0];\n                } else {\n                    var weather = v.forecasts[1];\n                }\n                convo.say(weather.dateLabel + &quot;の&quot; + v.title + &quot;は&quot; + weather.telop + &quot;です。最高気温は&quot; + weather.temperature.max.celsius + &quot;度です！&quot;);\n                convo.next();\n            });\n        });\n    });\n});</code></pre></div>\n<p>天気とつぶやくと、東京の今日または明日の天気と最高気温を返します。わりと実用的かもしれません。</p>\n<p>三項演算子を使っているところと使っていないところが混ざっているのでリファクタ対象ですね。レスポンスに Null が存在しててエラーになるという、、ちょっと対策せねば。。。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/3288/0*VAalKSTLAVaWtsIr.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([&#39;(.+)って何&#39;], &#39;direct_message,direct_mention,mention&#39;, function (bot, message) {\n    var thing = message.match[1];\n    var encodeThing = encodeURI(thing);\n    bot.reply(message, thing + &quot;を調べています...&quot;);\n    bot.startConversation(message, function (err, convo) {\n        var http = require(&#39;http&#39;);\n        http.get(&quot;http://wikipedia.simpleapi.net/api?output=json&amp;keyword=&quot; + encodeThing, function (result) {\n            var body = &#39;&#39;;\n            result.setEncoding(&#39;utf8&#39;);\n            result.on(&#39;data&#39;, function(data) {\n                body += data;\n            });\n            result.on(&#39;end&#39;, function(data) {\n                var v = JSON.parse(body);\n                if (v === null) {\n                    convo.say(thing + &#39;が見つかりませんでした。&#39;);\n                    convo.next();\n                } else {\n                    convo.say(v[0].body);\n                    convo.next();\n                }\n            });\n        });\n    });\n});</code></pre></div>\n<p>hoge って何？で hoge について Wikipedia します。っでいい感じに Description を返答します。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2516/0*txjc6AuIBUsh0Rjj.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([&#39;(.+)でニュース検索&#39;], &#39;direct_message,direct_mention,mention&#39;, function (bot, message) {\n    var thing = message.match[1];\n    var encodeThing = encodeURI(thing);\n    bot.reply(message, thing + &quot;のニュースを探しています...&quot;);\n    bot.startConversation(message, function (err, convo) {\n        var http = require(&#39;http&#39;);\n        var url = &quot;http://api.search.nicovideo.jp/api/v2/news/contents/search?targets=title,tags&amp;fields=contentId,title,startTime&amp;_context=slackbot&amp;_limit=10&amp;_sort=startTime&amp;q=&quot; + encodeThing;\n        http.get(url, function (result) {\n            var body = &#39;&#39;;\n            result.setEncoding(&#39;utf8&#39;);\n            result.on(&#39;data&#39;, function(data) {\n                body += data;\n            });\n            result.on(&#39;end&#39;, function(data) {\n                var m = JSON.parse(body);\n                var nicoArray = [];\n                var datas = m.data;\n                if (datas) {\n                    if (datas.length &gt; 0) {\n                        datas.forEach(function(val) {\n                            nicoArray.push(val.title + &quot; : [http://nico.ms/](http://nico.ms/)&quot; + val.contentId + &quot; 公開日: &quot; + new Date(val.startTime).toLocaleString());\n                        });\n                        convo.say(nicoArray.join(&#39;n&#39;));\n                        convo.next();\n                    } else {\n                        convo.say(&#39;みつかりませんでした。&#39;);\n                        convo.next();\n                    }\n                } else {\n                    convo.say(m.meta.errorMessage);\n                    convo.next();\n                }\n            });\n        });\n    });\n});</code></pre></div>\n<p>hoge でニュース検索！と呼びかけると、hoge に関するニコニコニュースを検索して返答します。オープンなニュースサイトの API がなかったのでこれを採用。。。URL の生成も <a href=\"http://nico.ms/\">http://nico.ms/</a> + val.contentId なので、結構楽ちんですね。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/0*pfWLOiv4sOvp6ftm.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([&#39;(.+)でお店を検索&#39;], &#39;direct_message,direct_mention,mention,ambient&#39;, function (bot, message) {\n    var http = require(&#39;http&#39;);\n    var thing = message.match[1];\n    var encodeWord = encodeURI(thing);\n    url = &#39;http://webservice.recruit.co.jp/hotpepper/shop/v1/?key=&#39; + process.env.hotpepperKey +&#39;&amp;format=json&amp;keyword=&#39; + encodeWord;\n    bot.reply(message, thing + &quot;でお店を調べています...&quot;);\n    bot.startConversation(message, function (err, convo) {\n        http.get(url, function (result) {\n            var body = &#39;&#39;;\n            var shopArray = [];\n            result.setEncoding(&#39;utf8&#39;);\n            result.on(&#39;data&#39;, function(data) {\n                body += data;\n            });\n            result.on(&#39;end&#39;, function(data) {\n                var v = JSON.parse(body);\n                var r = v.results;\n                if (r.shop) {\n                    if (r.shop.length &gt; 0) {\n                        r.shop.forEach(function(val) {\n                            shopArray.push(val.name + &#39; : &#39; + val.urls.pc);\n                        });\n                        convo.say(shopArray.join(&#39;n&#39;));\n                        convo.next();\n                    } else {\n                        convo.say(&#39;ヒットしませんでした&#39;);\n                        convo.next();\n                    }\n                } else {\n                    convo.say(&#39;見つからないかヒット数が多すぎるのでキーワードを整理してください&#39;);\n                    convo.next();\n                }\n            });\n        });\n    });\n});</code></pre></div>\n<p>hoge でお店を検索！っと呼びかけるとホットペッパーグルメでキーワード検索して返答します。うまい言葉を選ばないとなかなか帰ってこないです。。検索クエリーを考えるのが難しいところです。。</p>\n<p>そのへんを考慮して、形態素解析してもうちょっと検索クエリーの選定をしたいところです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller.hears([&#39;iPhone10&#39;], &#39;direct_message,direct_mention,mention,ambient&#39;, function (bot, message) {\n    bot.reply(message, &quot;iPhone10!!!&quot;);\n    var https = require(&#39;https&#39;);\n    var url = &quot;https://slack.com/api/chat.postMessage?token=&quot; + process.env.token + &quot;&amp;channel=%23&quot; + process.env.botChannel + &quot;&amp;text=%3Alongiphone1%3A%0A%3Alongiphone2%3A%0A%3Alongiphone3%3A%0A%3Alongiphone4%3A&amp;username=iphone10&amp;icon_emoji=%3Alongiphone1%3A%3Alongiphone2%3A%3Alongiphone3%3A%3Alongiphone4%3A&amp;pretty=1&quot;;\n    https.get(url);\n});</code></pre></div>\n<p>iPhone10 とつぶやくと iPhone10 っぽい反応をします。Slack そのものの API もあり、Get リクエストするだけで Bot っぽいポストもできるのでやっちゃいますよね。そして ICON の部分に微妙にバグがあるので、逆にそこを活かすというやーつ</p>\n<p>そんな感じです。</p>\n<p>まだまだ使えそうな API があるので、試して入れていってみたいと思います。NodeJS なのでわりとサクサク開発ができるので、そこもいいところですかね？</p>\n<p>いろいろ取り入れて、賢い Bot を作っていきましょう！！</p>","fields":{"slug":"/20161218-botkitを使って社内slackで遊んでいるおはなし/"},"frontmatter":{"title":"Botkitを使って社内Slackで遊んでいるおはなし","date":"December 18, 2016","description":"Botkitを使って社内Slackで遊んでいるおはなし"}},"previous":{"fields":{"slug":"/20161204-podcasts/"},"frontmatter":{"title":"Podcasts"}},"next":{"fields":{"slug":"/20161226-2016年の振り返り/"},"frontmatter":{"title":"2016年の振り返り"}}},"pageContext":{"id":"b3e99917-28ba-51c3-bc12-3763157ddfb8","previousPostId":"e2341ba6-26b0-5fbb-9f4a-9ebe9703cedc","nextPostId":"432a9e35-e517-51ca-9387-d0c041841c41"}},"staticQueryHashes":["2137539840","2201837728"]}