{"componentChunkName":"component---src-templates-blog-post-js","path":"/20190225-gitlab-ciを触ってみる/","result":{"data":{"site":{"siteMetadata":{"title":".ごっちの日記","siteUrl":"https://yutagoto.github.io"}},"markdownRemark":{"id":"3dc09606-26fd-547b-8a5e-3dd3e381e87e","excerpt":"こんにちは、.ごっちです。 今日が誕生日のアイマス CI シリーズ。今回は GitLabCI を触ってみました。 \n今日誕生日のアイドルを出力する CircleCI orb をつくったお話\n*こんにちは、 .ごっちです。*medium.com\ntodays-idol-travis-ci…","html":"<p>こんにちは、.ごっちです。</p>\n<p>今日が誕生日のアイマス CI シリーズ。今回は GitLabCI を触ってみました。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/5064/1*YjOtv5OOEP744YTdzBxWsw.png\" alt=\"\">\n<a href=\"https://medium.com/@gggooottto/%E4%BB%8A%E6%97%A5%E8%AA%95%E7%94%9F%E6%97%A5%E3%81%AE%E3%82%A2%E3%82%A4%E3%83%89%E3%83%AB%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8Bcircleci-orb%E3%82%92%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%81%8A%E8%A9%B1-fff413118a40\"><strong>今日誕生日のアイドルを出力する CircleCI orb をつくったお話</strong>\n*こんにちは、 .ごっちです。*medium.com</a>\n<a href=\"https://medium.com/@gggooottto/todays-idol-travis-ci%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F-da01a3f341d4\"><strong>todays-idol-travis-ci を作ってみた</strong>\n*こんにちは、 .ごっちです。*medium.com</a></p>\n<p>アイドルを出力するのにいつもの im@sparql を使っていきます。\n<a href=\"https://sparql.crssnky.xyz/imas/\"><strong>im@sparql</strong>\n<em>広がるアイマスワールドをオープンデータ化 Web やアプリから SPARQL で検索・利用可能なエンドポイント</em>sparql.crssnky.xyz</a></p>\n<h2>前段</h2>\n<p>アカウント作っていなかったので、アカウント作りました。。GitHub アカウント使えるんですね。。\n<a href=\"https://about.gitlab.com/\"><strong>The first single application for the entire DevOps lifecycle - GitLab</strong>\n*“From project planning and source code management to CI/CD and monitoring, GitLab is a single application for the…*about.gitlab.com</a></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Rk6ks8pTIUDBWocrX3HODA.png\" alt=\"\"></p>\n<h2>リポジトリを作る</h2>\n<p>テンプレなどなどいろいろありましたが、ひとまず GitLab 上だけで動くものを作りました。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*gG4NCT8TunuIEjeZYOILYQ.png\" alt=\"\">\n<a href=\"https://gitlab.com/YutaGoto/todays-imas-idol-gitlab-ci\"><strong>Yuta Goto / todays-imas-idol-gitlab-ci</strong>\n<em>GitLab.com</em>gitlab.com</a></p>\n<h2>.gitlab-ci.yml をプッシュする</h2>\n<p>いい感じに作って GitLab にプッシュします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># .gitlab-ci.yml\nbefore_script:\n  - apt-get update -qq\n  - apt-get install -y curl jq\n\nidol:\n  script:\n    - TODAY=`date +%m-%d`\n    - SPURL=\"https://sparql.crssnky.xyz/spql/imas/query?query=PREFIX%20schema%3A%20%3Chttp%3A%2F%2Fschema.org%2F%3ESELECT%20(sample(%3Fo)%20as%20%3Fdate)%20(sample(%3Fn)%20as%20%3Fname)%20WHERE%20%7B%20%3Fsub%20schema%3AbirthDate%20%3Fo%3B%20schema%3Aname%7Cschema%3AalternateName%20%3Fn%3BFILTER(regex(str(%3Fo)%2C%20%22$TODAY%22%20)).%7Dgroup%20by(%3Fn)order%20by(%3Fname)\"\n    - IDOLS=`curl -s $SPURL | jq \".results.bindings | map(.name.value)\" | jq -r 'join(\" \")'`\n    - echo $IDOLS</code></pre></div>\n<p>設定の構文は travis ci に似ているような気がします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># .travisci.yml の場合\nlanguage: bash\nbefore_install:\n  - sudo apt-get update -qq\n  - sudo apt-get install -y curl jq\nscript:\n  - TODAY=`date +%m-%d`\n  - SPURL=\"[https://sparql.crssnky.xyz/spql/imas/query?query=PREFIX%20schema%3A%20%3Chttp%3A%2F%2Fschema.org%2F%3ESELECT%20(sample(%3Fo)%20as%20%3Fdate)%20(sample(%3Fn)%20as%20%3Fname)%20WHERE%20%7B%20%3Fsub%20schema%3AbirthDate%20%3Fo%3B%20schema%3Aname%7Cschema%3AalternateName%20%3Fn%3BFILTER(regex(str(%3Fo)%2C%20%22$TODAY%22%20)).%7Dgroup%20by(%3Fn)order%20by(%3Fname)](https://sparql.crssnky.xyz/spql/imas/query?query=PREFIX%20schema%3A%20%3Chttp%3A%2F%2Fschema.org%2F%3ESELECT%20(sample(%3Fo)%20as%20%3Fdate)%20(sample(%3Fn)%20as%20%3Fname)%20WHERE%20%7B%20%3Fsub%20schema%3AbirthDate%20%3Fo%3B%20schema%3Aname%7Cschema%3AalternateName%20%3Fn%3BFILTER(regex(str(%3Fo)%2C%20%22$TODAY%22%20)).%7Dgroup%20by(%3Fn)order%20by(%3Fname))\"\n  - IDOLS=`curl -s $SPURL | jq \".results.bindings | map(.name.value)\" | jq -r 'join(\" \")'`\n  - echo $IDOLS</code></pre></div>\n<p>—</p>\n<p>文法チェックはブラウザ上でできるので、その部分はかなり強い気がしています。</p>\n<p>(ブログ用に失敗したページのスクショを撮ろうとしたら 500 が返却されて撮れなかった・。・；；)</p>\n<h2>チェックする</h2>\n<p>プッシュしたらほぼ勝手に実行されるので、実行結果をチェックします。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2484/1*7cHy7cF0jeKO7Vq8bFAxfA.png\" alt=\"\"></p>\n<p>正しいと見覚えのある実行結果が確認できます。</p>\n<p>上でも書いたんですが、設定方法自体は travisci に似ている感じがありました。あと、GitLab 側がいろいろテンプレを用意しているので、かなりとっつきやすいと思いました。</p>\n<p>GitLab のプロジェクトを作るときに他のリポジトリと連携させて、CI 部分だけを作ることも可能なのでかなりつよいです。！</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*AOeEcXmEMER7udduTcpT8g.png\" alt=\"\"></p>\n<p>初めて GitLab を触りましたが、思っていたよりも高機能でした！</p>\n<h2>References</h2>\n<ul>\n<li>\n<p>今日誕生日のアイドルを出力する CircleCI orb をつくったお話, <a href=\"https://medium.com/@gggooottto/%E4%BB%8A%E6%97%A5%E8%AA%95%E7%94%9F%E6%97%A5%E3%81%AE%E3%82%A2%E3%82%A4%E3%83%89%E3%83%AB%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8Bcircleci-orb%E3%82%92%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%81%8A%E8%A9%B1-fff413118a40\">https://medium.com/@gggooottto/%E4%BB%8A%E6%97%A5%E8%AA%95%E7%94%9F%E6%97%A5%E3%81%AE%E3%82%A2%E3%82%A4%E3%83%89%E3%83%AB%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8Bcircleci-orb%E3%82%92%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%81%8A%E8%A9%B1-fff413118a40</a></p>\n</li>\n<li>\n<p>todays-idol-travis-ci を作ってみた, <a href=\"https://medium.com/@gggooottto/todays-idol-travis-ci%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F-da01a3f341d4\">https://medium.com/@gggooottto/todays-idol-travis-ci%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F-da01a3f341d4</a></p>\n</li>\n<li>\n<p>YutaGoto/todays-imas-idol-gitlab-ci, <a href=\"https://gitlab.com/YutaGoto/todays-imas-idol-gitlab-ci\">https://gitlab.com/YutaGoto/todays-imas-idol-gitlab-ci</a></p>\n</li>\n<li>\n<p>The first single application for the entire DevOps lifecycle — GitLab | GitLab, <a href=\"https://about.gitlab.com/\">https://about.gitlab.com/</a></p>\n</li>\n<li>\n<p>im@sparql, <a href=\"https://sparql.crssnky.xyz/imas/\">https://sparql.crssnky.xyz/imas/</a></p>\n</li>\n<li>\n<p>GitLab CI でテスト・ビルド・デプロイを自動化する, <a href=\"https://qiita.com/bremen/items/f47f383b9931a840a25c\">https://qiita.com/bremen/items/f47f383b9931a840a25c</a></p>\n</li>\n</ul>","fields":{"slug":"/20190225-gitlab-ciを触ってみる/"},"frontmatter":{"title":"GitLab CIを触ってみる","date":"February 25, 2019","description":"GitLab CIを触ってみる"}},"previous":{"fields":{"slug":"/20190217-wakatimeで自分のコーディングを数値化してみた/"},"frontmatter":{"title":"WakaTimeで自分のコーディングを数値化してみた"}},"next":{"fields":{"slug":"/20190226-お世話になってるツール-サービス紹介記事/"},"frontmatter":{"title":"お世話になってるツール/サービス紹介記事"}}},"pageContext":{"id":"3dc09606-26fd-547b-8a5e-3dd3e381e87e","previousPostId":"45be28e9-5a03-54a1-b57b-fad37b38ead9","nextPostId":"cb6413ac-25ca-5988-a285-2737039ffacc"}},"staticQueryHashes":["2137539840","2201837728"]}