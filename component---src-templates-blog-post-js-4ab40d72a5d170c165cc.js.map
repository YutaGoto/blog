{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/fontawesome.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"names":["library","faGithub","faTwitter","dom","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","map","s","key","href","url","area-label","target","rel","aria-hidden","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","role","Link","to","fields","slug"],"mappings":"whCAGAA,cAAYC,MAAUC,OACtBC,cCQA,IAqEA,EArEY,WAAO,IAAD,IACVC,GAAOC,oBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,uBAAKA,UAAU,SACb,uBAAKA,UAAU,cACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAWF,uBAAKR,UAAU,iBACb,uBAAKA,UAAU,WACb,yBACE,8BAASJ,EAAOa,MAChB,2BAFF,YAMF,uBAAKT,UAAU,mBACb,uBAAKA,UAAU,cACZD,EAAOW,KAAI,SAAAC,GAAC,OACX,qBACEC,IAAKD,EAAEF,KACPI,KAAMF,EAAEG,IACRd,UAAU,aACVe,aAAYJ,EAAEF,KACdO,OAAO,SACPC,IAAI,uBAEJ,wBAAMjB,UAAU,QACd,qBAAGA,UAAS,UAAYW,EAAEF,KAAQS,cAAY,qB,+FCRlE,UAtDyB,SAAC,GAAwB,IAAD,EAArBxB,EAAqB,EAArBA,KAAMyB,EAAe,EAAfA,SAC1BC,EAAO1B,EAAK2B,eACZC,GAAY,UAAA5B,EAAKG,KAAKC,oBAAV,eAAwByB,QAAxB,QACVC,EAAmB9B,EAAnB8B,SAAUC,EAAS/B,EAAT+B,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,uBAAK5B,UAAU,WACb,uBAAKA,UAAU,4BACb,uBAAKA,UAAU,WACb,2BACEA,UAAU,YACV6B,WAAS,EACTC,SAAS,6BAET,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBACE,6BAAQH,EAAKM,YAAYM,OAE3B,2BACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,mBAKjB,uBAAK/B,UAAU,UACb,gBAAC,IAAD,QAGJ,uBAAKA,UAAU,yBAAyBoC,KAAK,cAC1CZ,GACC,gBAAC,EAAAa,KAAD,CACEC,GAAId,EAASe,OAAOC,KACpBvB,IAAI,OACJjB,UAAU,uBAHZ,KAKKwB,EAASE,YAAYH,OAG3BE,GACC,gBAAC,EAAAY,KAAD,CAAMC,GAAIb,EAAKc,OAAOC,KAAMvB,IAAI,OAAOjB,UAAU,mBAC9CyB,EAAKC,YAAYH,MADpB","file":"component---src-templates-blog-post-js-4ab40d72a5d170c165cc.js","sourcesContent":["import { dom, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nlibrary.add(faGithub, faTwitter)\ndom.watch()\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport \"./fontawesome\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"box\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <StaticImage\n            className=\"bio-avatar\"\n            layout=\"fixed\"\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n            src=\"../images/profile-pic.png\"\n            width={50}\n            height={50}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <strong>{author.name}</strong>\n              <br />\n              エンジニアです\n            </p>\n          </div>\n          <nav className=\"level is-mobile\">\n            <div className=\"level-left\">\n              {social.map(s => (\n                <a\n                  key={s.name}\n                  href={s.url}\n                  className=\"level-item\"\n                  area-label={s.name}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <span className=\"icon\">\n                    <i className={`fab fa-${s.name}`} aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n              ))}\n            </div>\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"columns\">\n        <div className=\"column is-three-quarters\">\n          <div className=\"content\">\n            <article\n              className=\"blog-post\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n              <p>\n                <small>{post.frontmatter.date}</small>\n              </p>\n              <section\n                dangerouslySetInnerHTML={{ __html: post.html }}\n                itemProp=\"articleBody\"\n              />\n            </article>\n          </div>\n        </div>\n        <div className=\"column\">\n          <Bio />\n        </div>\n      </div>\n      <nav className=\"pagination is-centered\" role=\"navigation\">\n        {previous && (\n          <Link\n            to={previous.fields.slug}\n            rel=\"prev\"\n            className=\"pagination-previous\"\n          >\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\" className=\"pagination-next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}