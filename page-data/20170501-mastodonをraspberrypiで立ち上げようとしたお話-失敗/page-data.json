{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/20170501-mastodonをraspberrypiで立ち上げようとしたお話-失敗/",
    "result": {"data":{"site":{"siteMetadata":{"title":".ごっちの日記","siteUrl":"https://yutagoto.github.io"}},"markdownRemark":{"id":"ddf8c219-8942-59bf-b44c-e10dbd34a1a9","excerpt":"どうもこんにちは。ごっちです。 お休み中で時間がそこそこあるので、いま話題の Mastodon を RaspberryPi で立ち上げようとしてみたお話。 用意したものはこちら RaspberryPi https://www.raspberrypi.org/products/model-b/…","html":"<p>どうもこんにちは。ごっちです。</p>\n<p><a href=\"https://medium.com/@gggooottto/%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%AB%E7%99%82%E9%A4%8A-4b5edd377906\">お休み</a>中で時間がそこそこあるので、いま話題の Mastodon を RaspberryPi で立ち上げようとしてみたお話。</p>\n<p>用意したものはこちら</p>\n<ul>\n<li>\n<p>RaspberryPi <a href=\"https://www.raspberrypi.org/products/model-b/\">https://www.raspberrypi.org/products/model-b/</a></p>\n</li>\n<li>\n<p>4 年前に買ったもので、初期型のもの</p>\n</li>\n<li>\n<p>Memory: 512MB</p>\n</li>\n<li>\n<p>SD カード 16GB</p>\n</li>\n<li>\n<p>Raspbian Jessie Lite (4.4)</p>\n</li>\n</ul>\n<p>RaspberryPi のインストール方法は割愛します。</p>\n<p>っで今回参考にしたサイトがこちら。</p>\n<p><a href=\"https://uehatsu.info/tech/archives/2017/04/raspberry-pimastodon.html\">Raspberry Pi に mastodon インスタンスを立ち上げてみる（成功）</a></p>\n<p>すでに成功者がいらっしゃるので行けるだろうと思ってました。</p>\n<p>ここに書いてある通りに進めてみます。。</p>\n<h2>Mastodon 前のセットアップ</h2>\n<p>Docker をインストールしましょう！</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl -sSL https://get.docker.com/ | sh\n+ sudo -E sh -c sleep 3; apt-get update\n.....\n+ sudo -E sh -c docker version\nClient:\nVersion:      17.04.0-ce\nAPI version:  1.28\nGo version:   go1.7.5\nGit commit:   4845c56\nBuilt:        Mon Apr  3 18:22:23 2017\nOS/Arch:      linux/arm\nServer:\nVersion:      17.04.0-ce\nAPI version:  1.28 (minimum version 1.12)\nGo version:   go1.7.5\nGit commit:   4845c56\nBuilt:        Mon Apr  3 18:22:23 2017\nOS/Arch:      linux/arm\nExperimental: false\n\nIf you would like to use Docker as a non-root user, you should now consider\n\nadding your user to the \"docker\" group with something like:\nsudo usermod -aG docker pi\n\nRemember that you will have to log out and back in for this to take effect!\n\nWARNING: Adding a user to the \"docker\" group will grant the ability to run\n\ncontainers which can be used to obtain root privileges on the\ndocker host.\nRefer to [https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface](https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface)\nfor more information.\n$ sudo systemctl start docker\n$ sudo usermod -aG docker pi</code></pre></div>\n<p>なんやかんやでうまくやってくれました。</p>\n<p>次に、 Docker-Compose をインストール！</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl -L https://github.com/docker/compose/releases/download/1.7.1/run.sh > docker-compose\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\nDload  Upload   Total   Spent    Left  Speed\n100   582    0   582    0     0    867      0 --:--:-- --:--:-- --:--:--   867\n100  1400  100  1400    0     0    948      0  0:00:01  0:00:01 --:--:--  113k\n$ sudo mv docker-compose /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n$ sudo vi /usr/local/bin/docker-compose\n===== IMAGE行を以下に書き換え =====\nIMAGE=\"t0rx/rpi-docker-compose:latest\"\n===== IMAGE行を以上に書き換え =====\n$ docker-compose --version\nUnable to find image 't0rx/rpi-docker-compose:latest' locally\nlatest: Pulling from t0rx/rpi-docker-compose\n...</code></pre></div>\n<h2>RaspberryPi に Mastodon を入れる！！</h2>\n<p>clone してきます</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cd /var/lib/\n$ sudo git clone [https://github.com/gilir/rpi-mastdon.git](https://github.com/gilir/rpi-mastdon.git)\nCloning into 'rpi-mastdon'...\n...\n$ cd rpi-mastodon</code></pre></div>\n<p>初期設定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo cp .env.production.sample .env.production\n$ vi .env.production # いい感じに設定ファイルを編集する</code></pre></div>\n<h2>試しに起動してみる</h2>\n<p>けども、いろいろエラーが表示されるので、その指示に従う</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo docker-compose up -d\nERROR: Network proxy-network declared as external, but could not be found. Please create the network manually using `docker network create proxy-network` and try again.\n$ sudo docker network create proxy-network\n44358820859d1dea3c62175f66c6d6d5c2f8b0a300de8fc41ae11114721298f6\n$ sudo docker-compose up -d\nERROR: Volume mastodon_public_assets declared as external, but could not be found. Please create the volume manually using `docker volume create --name=mastodon_public_assets` and try again.\n$ sudo docker volume create --name=mastodon_public_assets\nmastodon_public_assets\n$ sudo docker-compose up -d\nERROR: Volume mastodon_postgres declared as external, but could not be found. Please create the volume manually using `docker volume create --name=mastodon_postgres` and try again.\n$ sudo docker volume create --name=mastodon_postgres\nmastodon_postgres\n$ sudo docker-compose up -d\nERROR: Volume mastodon_public_system declared as external, but could not be found. Please create the volume manually using `docker volume create --name=mastodon_public_system` and try again.\n$ sudo docker volume create --name=mastodon_public_system\nmastodon_public_system\n$ sudo docker-compose up -d\nERROR: Volume mastodon_redis declared as external, but could not be found. Please create the volume manually using `docker volume create --name=mastodon_redis` and try again.\n$ sudo docker volume create --name=mastodon_redis\nmastodon_radis\n$ sudo docker-compose up -d\nPulling redis (armhf/redis:latest)...\nlatest: Pulling from armhf/redis\n...\n# もろもろインストールしたりするので、かなり時間がかかるのでゼルダでもやりながら気長に待つ\n$</code></pre></div>\n<h2>secrets を用意する</h2>\n<p>.env.production の PAPERCLIP_SECRET SECRET_KEY_BASE OTP_SECRET が設定されていないので生成する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo docker-compose run --rm web rake secret\nなんか長い文字列1\n$ sudo docker-compose run --rm web rake secret\nなんか長い文字列2\n$ sudo docker-compose run --rm web rake secret\nなんか長い文字列3\n$ sudo vim .env.production\n# PAPERCLIP_SECRET=なんか長い文字列1\n# SECRET_KEY_BASE=なんか長い文字列2\n# OTP_SECRET=なんか長い文字列3</code></pre></div>\n<h2>一回起動しみる</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo docker-compose up -d\nStarting rpimastodon_redis_1\nStarting rpimastodon_db_1\nRecreating rpimastodon_web_1\nRecreating rpimastodon_streaming_1\nRecreating rpimastodon_sidekiq_1</code></pre></div>\n<p>無事に動いたような気がする！！！</p>\n<p>ただ、メモリ不足になりそうだったので、Swap を増やしておく。。</p>\n<h2>SWAP 領域を用意する</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo docker-compose stop\n$ swapon -s\nFilename                                Type            Size    Used    Priority\n/var/swap                               file            102396  0       -1\n$ sudo systemctl stop dphys-swapfile\n$ sudo vi /etc/dphys-swapfile\n=====\nCONF_SWAPSIZE=1024\n=====\n$ sudo systemctl start dphys-swapfile\n（しばらく時間かかる）\n$ swapon -s\nFilename                                Type            Size    Used    Priority\n/var/swap                               file            1048572 0       -1\n$ sudo docker-compose up -d</code></pre></div>\n<p>確保できたぞ！！</p>\n<h2>DB 情報を更新する</h2>\n<p>いつもの Rails コマンドを実行する</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo docker-compose run --rm web rails db:migrate\nMigrating to CreateAccounts (20160220174730)\n== 20160220174730 CreateAccounts: migrating ===================================\n-- create_table(:accounts, {})\n-> 0.4249s\n-- add_index(:accounts, [:username, :domain], {:unique=>true})\n-> 0.1557s\n== 20160220174730 CreateAccounts: migrated (0.6253s) ==========================\n...\nMigrating to AddLanguageToStatuses (20170414132105)\n== 20170414132105 AddLanguageToStatuses: migrating ============================\n-- add_column(:statuses, :language, :string, {:null=>false, :default=>\"en\"})\n-> 0.6564s\n== 20170414132105 AddLanguageToStatuses: migrated (0.6777s) ===================</code></pre></div>\n<p>なかなか時間がかかったけども、なんとか実行終わり。</p>\n<h2>Precompile する</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo docker-compose run --rm web rails assets:precompile\nI, [2017-04-26T13:02:16.365479 #1]  INFO -- : Writing /mastodon/public/assets/application_public-ff92fbfb31a9056b294415acf2190bf7a5ab47eb875ad7863ec82171915654bc.js\n...\nI, [2017-04-26T13:06:02.868396 #1]  INFO -- : Writing /mastodon/public/assets/void-767af9b741bc6b218b558bea8a5f430d3275a09756188e1e2eb1845a04bdb828.png\n# 時間がかかる上に、なんかここで固まる</code></pre></div>\n<p>おい！そこで固まるんかい！</p>\n<p>しょうがないから、いちど電源を落として、起動させて同じコマンドを実行するも、すぐに固まるという。。</p>\n<p>ここで <em>試合終了</em></p>\n<h2>このあとやること</h2>\n<p>nginx をインストールして、おれおれ証明書を発行して、起動させるだけです。ここまでたどり着かなかった。。。</p>\n<h2>敗因</h2>\n<p>純粋に RaspberryPi 1 Model B のスペックがいけないような気がするんですよね。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Model B is the higher-spec variant of Raspberry Pi 1 (superseded by Raspberry Pi 2 Model B), with 512 MB of RAM, two USB ports and a 100mb Ethernet port.</code></pre></div>\n<p>メモリ 512MB で Docker を動かすのがいけなかったのかなと思っております。</p>\n<p>3, 4 日がんばりましたが、起動しませんでした。ありがとうございました。</p>\n<h2>References</h2>\n<ul>\n<li>\n<p>Raspberry Pi に mastodon インスタンスを立ち上げてみる（成功） <a href=\"https://uehatsu.info/tech/archives/2017/04/raspberry-pimastodon.html\">https://uehatsu.info/tech/archives/2017/04/raspberry-pimastodon.html</a></p>\n</li>\n<li>\n<p>Raspberry Pi 1 Model B <a href=\"https://www.raspberrypi.org/products/model-b/\">https://www.raspberrypi.org/products/model-b/</a></p>\n</li>\n<li>\n<p>Raspberry Pi の swap 領域変更 <a href=\"http://qapla.blog52.fc2.com/blog-entry-296.html\">http://qapla.blog52.fc2.com/blog-entry-296.html</a></p>\n</li>\n<li>\n<p>t0rx/rpi-docker-compose <a href=\"https://hub.docker.com/r/t0rx/rpi-docker-compose/\">https://hub.docker.com/r/t0rx/rpi-docker-compose/</a></p>\n</li>\n<li>\n<p>tootsuite/mastodon <a href=\"https://github.com/tootsuite/mastodon\">https://github.com/tootsuite/mastodon</a></p>\n</li>\n<li>\n<p>Docker comes to Raspberry Pi <a href=\"https://www.raspberrypi.org/blog/docker-comes-to-raspberry-pi/\">https://www.raspberrypi.org/blog/docker-comes-to-raspberry-pi/</a></p>\n</li>\n</ul>\n<p><em>Originally published at <a href=\"https://gist.github.com/YutaGoto/5605e95137e05fce76c2641cad4bc74d\">gist.github.com</a>.</em></p>\n<h3>追記</h3>\n<p>Gist からインポートしたけど、ちょっとイケていない感じがありますね。。。とくに、コードの部分が。。。</p>","fields":{"slug":"/20170501-mastodonをraspberrypiで立ち上げようとしたお話-失敗/"},"frontmatter":{"title":"MastodonをRaspberryPiで立ち上げようとしたお話（失敗）","date":"May 01, 2017","description":"MastodonをRaspberryPiで立ち上げようとしたお話（失敗）","tags":null}},"previous":{"fields":{"slug":"/20170123-b型インフルエンザ/"},"frontmatter":{"title":"B型インフルエンザ"}},"next":{"fields":{"slug":"/20170511-windowsでmastodonを動かしてみようとした話-微妙に失敗/"},"frontmatter":{"title":"windowsでmastodonを動かしてみようとした話（微妙に失敗）"}}},"pageContext":{"id":"ddf8c219-8942-59bf-b44c-e10dbd34a1a9","previousPostId":"3a7f2eaa-9a79-506a-bf28-bbebe2f72547","nextPostId":"210a2804-b780-5b1f-92d7-d1041b1bf9fc"}},
    "staticQueryHashes": ["2137539840","2183174749"]}