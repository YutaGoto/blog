{"version":3,"file":"component---src-pages-404-tsx-b5ac90938baaeb05359e.js","mappings":"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","sources":["webpack://yutagoto-blog/./src/components/Tag.tsx","webpack://yutagoto-blog/./src/components/ArticleCard.tsx","webpack://yutagoto-blog/./src/components/fontawesome.ts","webpack://yutagoto-blog/./src/components/Bio.tsx","webpack://yutagoto-blog/./src/components/ButtonLink.tsx","webpack://yutagoto-blog/./src/components/Layout.tsx","webpack://yutagoto-blog/./src/components/seo.tsx","webpack://yutagoto-blog/./src/pages/404.tsx"],"sourcesContent":["import React from \"react\"\n\ninterface TagProps {\n  tag: GatsbyTypes.Maybe<string>\n  className?: string\n}\n\nexport const Tag = ({ tag, className = \"\" }: TagProps) => {\n  return (\n    <span className={`${className} py-1 px-2 rounded text-sm bg-emerald-800`}>\n      {tag}\n    </span>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Tag } from \"./Tag\"\n\ninterface ArticleCardProps {\n  post: Pick<GatsbyTypes.MarkdownRemark, \"excerpt\"> & {\n    readonly fields: GatsbyTypes.Maybe<Pick<GatsbyTypes.Fields, \"slug\">>\n    readonly frontmatter: GatsbyTypes.Maybe<\n      Pick<GatsbyTypes.Frontmatter, \"description\" | \"title\" | \"date\" | \"tags\">\n    >\n  }\n}\n\nexport const ArticleCard = ({ post }: ArticleCardProps) => {\n  const title = post.frontmatter?.title || post.fields?.slug\n  const tags = post.frontmatter?.tags\n\n  return (\n    <div className=\"px-4 py-10 mb-2 bg-gray-50 dark:bg-gray-800 shadow-lg sm:rounded-xl sm:p-5\">\n      <Link\n        to={post.fields?.slug || \"\"}\n        itemProp=\"url\"\n        className=\"has-text-black\"\n      >\n        <article\n          className=\"media\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <div className=\"\">\n            <div className=\"text-2xl mb-2\">{title}</div>\n            <div className=\"text-sm mb-2\">{post.frontmatter?.date}</div>\n            <div className=\"mb-2\">\n              {tags?.map(tag => (\n                <Tag key={tag} className=\"mr-1\" tag={tag} />\n              ))}\n            </div>\n            <div\n              className=\"text-base\"\n              dangerouslySetInnerHTML={{\n                __html: post.frontmatter?.description || post.excerpt || \"\",\n              }}\n              itemProp=\"description\"\n            />\n          </div>\n        </article>\n      </Link>\n    </div>\n  )\n}\n","import { dom, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\n\nlibrary.add(faGithub, faTwitter, faAngleRight, faAngleLeft)\ndom.watch()\n","import React, { FC } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { ImageFormat, StaticImage } from \"gatsby-plugin-image\"\nimport \"./fontawesome\"\n\nexport const PureBio: FC<{ data: GatsbyTypes.BioQuery }> = ({ data }) => {\n  const author = data.site?.siteMetadata?.author\n  const social = data.site?.siteMetadata?.social\n  const formats: ImageFormat[] = [\"auto\", \"webp\", \"avif\"]\n\n  return (\n    <div className=\"px-4 py-10 bg-gray-50 dark:bg-gray-800 shadow-lg sm:rounded-xl sm:p-5\">\n      <div className=\"flex space-x-4\">\n        <div className=\"flex-none\">\n          <StaticImage\n            className=\"bio-avatar\"\n            layout=\"fixed\"\n            formats={formats}\n            src=\"../images/profile-pic.png\"\n            width={180}\n            height={180}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n\n        <div className=\"flex-1 flex flex-col space-y-3\">\n          <div>\n            <p className=\"text-3xl mb-2\">{author?.name}</p>\n            <p className=\"text-xl\">{author?.summary}</p>\n          </div>\n          <div className=\"flex-1 flex space-x-6\">\n            {social?.map(s => (\n              <a\n                key={s?.name}\n                href={s?.url}\n                className=\"object-bottom\"\n                area-label={s?.name}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                <span className=\"icon\">\n                  <i\n                    className={`fab fa-${s?.name} fa-lg`}\n                    aria-hidden=\"true\"\n                  ></i>\n                </span>\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const Bio = () => {\n  const data: GatsbyTypes.BioQuery = useStaticQuery<GatsbyTypes.BioQuery>(\n    graphql`\n      query Bio {\n        site {\n          siteMetadata {\n            author {\n              name\n              summary\n            }\n            social {\n              name\n              url\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return <PureBio data={data} />\n}\n\nexport default Bio\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport \"./fontawesome\"\n\ninterface ButtonLinkProps {\n  text: string\n  linkTo: string\n  iconName: string\n  rel: string\n  isLeft?: boolean\n}\n\nexport const ButtonLink = ({\n  text,\n  linkTo,\n  iconName,\n  rel,\n  isLeft = true,\n}: ButtonLinkProps) => (\n  <Link\n    className=\"box-border p-2 lg:mb-0 mb-1 border text-blue-400 dark:text-gray-100 border-blue-400 dark:border-blue-700 hover:bg-blue-400 hover:text-gray-900 dark:hover:bg-blue-700 dark:hover:text-gray-100\"\n    to={linkTo}\n    rel={rel}\n  >\n    {isLeft && <i className={`fas fa-${iconName}`} aria-hidden=\"true\" />}\n    <span>{text}</span>\n    {!isLeft && <i className={`fas fa-${iconName}`} aria-hidden=\"true\" />}\n  </Link>\n)\n","import React, { FC } from \"react\"\nimport { Link, PageProps } from \"gatsby\"\n\ninterface Props {\n  title: string\n  location: PageProps[\"location\"]\n}\n\nexport const Layout: FC<Props> = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100\">\n      <nav\n        className=\"sticky top-0 h-10 bg-blue-300 dark:bg-blue-900 flex z-50\"\n        role=\"navigation\"\n      >\n        <div>\n          <Link\n            className=\"text-gray-900 dark:text-gray-100 text-3xl pl-2\"\n            to=\"/\"\n          >\n            {title}\n          </Link>\n        </div>\n      </nav>\n      <main className=\"container mt-1 mx-auto w-11/12\">\n        <div data-is-root-path={isRootPath}>{children}</div>\n      </main>\n      <footer className=\"h-10 bg-gray-300 dark:bg-gray-400 flex\">\n        <div className=\"flex-1 text-gray-900 dark:text-gray-100\">\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </div>\n      </footer>\n    </div>\n  )\n}\n","/**\n * Seo component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React, { FC } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ntype Props = {\n  description?: string\n  lang?: string\n  meta?: (\n    | { name: string; content: string }\n    | { property: string; content: string }\n  )[]\n  title?: string\n}\n\nconst Seo: FC<Props> = ({\n  description = ``,\n  lang = `ja`,\n  meta = [],\n  title = \"\",\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              name\n              url\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : \"\"}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.name || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default Seo\n","import React, { FC } from \"react\"\nimport { graphql, Link, PageProps } from \"gatsby\"\n\nimport { Layout } from \"../components\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage: FC<PageProps<GatsbyTypes.NotFoundQuery>> = ({\n  data,\n  location,\n}) => {\n  const siteTitle = data.site?.siteMetadata?.title || \"\"\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"404: Not Found\" />\n      <div className=\"h-screen flex items-center justify-center text-center\">\n        <div>\n          <h1 className=\"text-4xl mb-2\">404: Not Found</h1>\n          <Link to=\"/\" className=\"underline\">\n            Go To Home\n          </Link>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query NotFound {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["Tag","tag","className","React","ArticleCard","post","title","frontmatter","fields","_post$fields","slug","tags","_post$frontmatter2","Link","to","itemProp","itemScope","itemType","_post$frontmatter3","date","map","key","dangerouslySetInnerHTML","__html","description","excerpt","library","faGithub","faTwitter","faAngleRight","faAngleLeft","dom","PureBio","data","author","site","_data$site","siteMetadata","_data$site$siteMetada","social","_data$site2","_data$site2$siteMetad","StaticImage","layout","formats","src","width","height","quality","alt","name","summary","s","href","url","target","rel","Bio","useStaticQuery","ButtonLink","text","linkTo","iconName","isLeft","Layout","location","children","isRootPath","__PATH_PREFIX__","pathname","role","Date","getFullYear","lang","meta","metaDescription","defaultTitle","_site$siteMetadata","Helmet","htmlAttributes","titleTemplate","content","property","concat","siteTitle","Seo"],"sourceRoot":""}